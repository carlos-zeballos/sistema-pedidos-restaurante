const axios = require('axios');

const API_BASE_URL = 'http://localhost:3001';

async function testEndpoints() {
  console.log('üîç Probando endpoints del backend...\n');

  // 1. Login para obtener token
  let token = '';
  try {
    console.log('1Ô∏è‚É£ Probando login...');
    const loginResponse = await axios.post(`${API_BASE_URL}/auth/login`, {
      username: 'admin',
      password: 'Admin123!'
    });
    token = loginResponse.data.access_token;
    console.log('‚úÖ Login exitoso');
  } catch (error) {
    console.log('‚ùå Error en login:', error.response?.data || error.message);
    return;
  }

  const headers = {
    'Authorization': `Bearer ${token}`,
    'Content-Type': 'application/json'
  };

  // 2. Probar endpoint de categor√≠as
  try {
    console.log('\n2Ô∏è‚É£ Probando categor√≠as...');
    const response = await axios.get(`${API_BASE_URL}/catalog/categories`, { headers });
    console.log('‚úÖ Categor√≠as:', response.data.length, 'elementos');
  } catch (error) {
    console.log('‚ùå Error en categor√≠as:', error.response?.status, error.response?.data?.message || error.message);
  }

  // 3. Probar endpoint de productos
  try {
    console.log('\n3Ô∏è‚É£ Probando productos...');
    const response = await axios.get(`${API_BASE_URL}/catalog/products`, { headers });
    console.log('‚úÖ Productos:', response.data.length, 'elementos');
  } catch (error) {
    console.log('‚ùå Error en productos:', error.response?.status, error.response?.data?.message || error.message);
  }

  // 4. Probar endpoint de espacios/mesas
  try {
    console.log('\n4Ô∏è‚É£ Probando espacios...');
    const response = await axios.get(`${API_BASE_URL}/tables`, { headers });
    console.log('‚úÖ Espacios:', response.data.length, 'elementos');
  } catch (error) {
    console.log('‚ùå Error en espacios:', error.response?.status, error.response?.data?.message || error.message);
  }

  // 5. Probar endpoint de √≥rdenes
  try {
    console.log('\n5Ô∏è‚É£ Probando √≥rdenes...');
    const response = await axios.get(`${API_BASE_URL}/orders`, { headers });
    console.log('‚úÖ √ìrdenes:', response.data.length, 'elementos');
  } catch (error) {
    console.log('‚ùå Error en √≥rdenes:', error.response?.status, error.response?.data?.message || error.message);
  }

  // 6. Probar endpoint de usuarios
  try {
    console.log('\n6Ô∏è‚É£ Probando usuarios...');
    const response = await axios.get(`${API_BASE_URL}/users`, { headers });
    console.log('‚úÖ Usuarios:', response.data.length, 'elementos');
  } catch (error) {
    console.log('‚ùå Error en usuarios:', error.response?.status, error.response?.data?.message || error.message);
  }

  console.log('\nüéØ Prueba de endpoints completada');
}

testEndpoints();
