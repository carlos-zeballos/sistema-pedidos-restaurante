#!/usr/bin/env node

console.log('üöÄ GU√çA COMPLETA PARA USAR SUPABASE DESDE LA INTERFAZ WEB\n');

console.log('üìã ACCESO AL PROYECTO:');
console.log('   1. Ve a https://supabase.com/dashboard');
console.log('   2. Inicia sesi√≥n con tu cuenta');
console.log('   3. Haz clic en tu proyecto "restaurant-system"\n');

console.log('üîß HERRAMIENTAS PRINCIPALES:\n');

console.log('1Ô∏è‚É£ TABLE EDITOR:');
console.log('   ‚Ä¢ Ubicaci√≥n: Men√∫ lateral ‚Üí Table Editor');
console.log('   ‚Ä¢ Funci√≥n: Crear, editar y gestionar tablas');
console.log('   ‚Ä¢ Ventajas: Interfaz visual, sin SQL necesario\n');

console.log('2Ô∏è‚É£ SQL EDITOR:');
console.log('   ‚Ä¢ Ubicaci√≥n: Men√∫ lateral ‚Üí SQL Editor');
console.log('   ‚Ä¢ Funci√≥n: Ejecutar consultas SQL personalizadas');
console.log('   ‚Ä¢ Ventajas: Sintaxis highlighting, autocompletado\n');

console.log('3Ô∏è‚É£ AUTHENTICATION:');
console.log('   ‚Ä¢ Ubicaci√≥n: Men√∫ lateral ‚Üí Authentication');
console.log('   ‚Ä¢ Funci√≥n: Gestionar usuarios y autenticaci√≥n');
console.log('   ‚Ä¢ Ventajas: Configuraci√≥n visual de pol√≠ticas\n');

console.log('4Ô∏è‚É£ SETTINGS:');
console.log('   ‚Ä¢ Ubicaci√≥n: Men√∫ lateral ‚Üí Settings');
console.log('   ‚Ä¢ Funci√≥n: Configurar API keys, conexiones, etc.');
console.log('   ‚Ä¢ Ventajas: Gesti√≥n centralizada de configuraci√≥n\n');

console.log('üìä CREAR LAS TABLAS DEL SISTEMA:\n');

console.log('üéØ PASO 1: CREAR TABLA "User"');
console.log('   ‚Ä¢ Ve a Table Editor ‚Üí New Table');
console.log('   ‚Ä¢ Nombre: User');
console.log('   ‚Ä¢ Columnas:');
console.log('     - id: uuid (Primary Key)');
console.log('     - username: text (Unique)');
console.log('     - password: text');
console.log('     - role: text (Default: "WAITER")');
console.log('     - createdAt: timestamp (Default: now())\n');

console.log('üéØ PASO 2: CREAR TABLA "DiningTable"');
console.log('   ‚Ä¢ Ve a Table Editor ‚Üí New Table');
console.log('   ‚Ä¢ Nombre: DiningTable');
console.log('   ‚Ä¢ Columnas:');
console.log('     - id: uuid (Primary Key)');
console.log('     - code: text (Unique)');
console.log('     - createdAt: timestamp (Default: now())\n');

console.log('üéØ PASO 3: CREAR TABLA "Category"');
console.log('   ‚Ä¢ Ve a Table Editor ‚Üí New Table');
console.log('   ‚Ä¢ Nombre: Category');
console.log('   ‚Ä¢ Columnas:');
console.log('     - id: uuid (Primary Key)');
console.log('     - code: text (Unique)');
console.log('     - name: text');
console.log('     - ord: integer');
console.log('     - createdAt: timestamp (Default: now())\n');

console.log('üéØ PASO 4: CREAR TABLA "Product"');
console.log('   ‚Ä¢ Ve a Table Editor ‚Üí New Table');
console.log('   ‚Ä¢ Nombre: Product');
console.log('   ‚Ä¢ Columnas:');
console.log('     - id: uuid (Primary Key)');
console.log('     - code: text (Unique)');
console.log('     - name: text');
console.log('     - description: text (Nullable)');
console.log('     - basePrice: decimal');
console.log('     - type: text');
console.log('     - station: text (Nullable)');
console.log('     - enabled: boolean (Default: true)');
console.log('     - categoryId: uuid (Foreign Key ‚Üí Category.id)');
console.log('     - createdAt: timestamp (Default: now())\n');

console.log('üéØ PASO 5: CREAR TABLA "Order"');
console.log('   ‚Ä¢ Ve a Table Editor ‚Üí New Table');
console.log('   ‚Ä¢ Nombre: Order');
console.log('   ‚Ä¢ Columnas:');
console.log('     - id: uuid (Primary Key)');
console.log('     - status: text (Default: "DRAFT")');
console.log('     - tableId: uuid (Foreign Key ‚Üí DiningTable.id)');
console.log('     - userId: uuid (Foreign Key ‚Üí User.id)');
console.log('     - notes: text (Nullable)');
console.log('     - sentAt: timestamp (Nullable)');
console.log('     - readyAt: timestamp (Nullable)');
console.log('     - servedAt: timestamp (Nullable)');
console.log('     - closedAt: timestamp (Nullable)');
console.log('     - totalItems: integer (Default: 0)');
console.log('     - readyCount: integer (Default: 0)');
console.log('     - servedCount: integer (Default: 0)');
console.log('     - createdAt: timestamp (Default: now())\n');

console.log('üéØ PASO 6: CREAR TABLA "OrderItem"');
console.log('   ‚Ä¢ Ve a Table Editor ‚Üí New Table');
console.log('   ‚Ä¢ Nombre: OrderItem');
console.log('   ‚Ä¢ Columnas:');
console.log('     - id: uuid (Primary Key)');
console.log('     - orderId: uuid (Foreign Key ‚Üí Order.id)');
console.log('     - productId: uuid (Foreign Key ‚Üí Product.id, Nullable)');
console.log('     - kind: text');
console.log('     - nameSnapshot: text');
console.log('     - priceSnapshot: decimal');
console.log('     - qty: integer');
console.log('     - station: text (Nullable)');
console.log('     - notes: text (Nullable)');
console.log('     - status: text (Default: "SENT")');
console.log('     - createdAt: timestamp (Default: now())\n');

console.log('üí° INSERTAR DATOS DE PRUEBA:\n');

console.log('üìù USUARIOS DE PRUEBA:');
console.log('   INSERT INTO "User" (id, username, password, role) VALUES');
console.log('   (gen_random_uuid(), "admin", "$2b$10$...", "ADMIN"),');
console.log('   (gen_random_uuid(), "waiter1", "$2b$10$...", "WAITER"),');
console.log('   (gen_random_uuid(), "kitchen", "$2b$10$...", "KITCHEN");\n');

console.log('üìù MESAS DE PRUEBA:');
console.log('   INSERT INTO "DiningTable" (id, code) VALUES');
console.log('   (gen_random_uuid(), "TABLE_1"),');
console.log('   (gen_random_uuid(), "TABLE_2"),');
console.log('   (gen_random_uuid(), "TABLE_3");\n');

console.log('üìù CATEGOR√çAS DE PRUEBA:');
console.log('   INSERT INTO "Category" (id, code, name, ord) VALUES');
console.log('   (gen_random_uuid(), "SUSHI", "Sushi", 1),');
console.log('   (gen_random_uuid(), "DRINKS", "Bebidas", 2),');
console.log('   (gen_random_uuid(), "DESSERTS", "Postres", 3);\n');

console.log('üîß CONFIGURAR RELACIONES:\n');

console.log('1Ô∏è‚É£ Product ‚Üí Category:');
console.log('   ‚Ä¢ En la tabla Product, configura categoryId como Foreign Key');
console.log('   ‚Ä¢ Referencia: Category.id');
console.log('   ‚Ä¢ Acci√≥n: CASCADE\n');

console.log('2Ô∏è‚É£ Order ‚Üí DiningTable:');
console.log('   ‚Ä¢ En la tabla Order, configura tableId como Foreign Key');
console.log('   ‚Ä¢ Referencia: DiningTable.id');
console.log('   ‚Ä¢ Acci√≥n: CASCADE\n');

console.log('3Ô∏è‚É£ Order ‚Üí User:');
console.log('   ‚Ä¢ En la tabla Order, configura userId como Foreign Key');
console.log('   ‚Ä¢ Referencia: User.id');
console.log('   ‚Ä¢ Acci√≥n: CASCADE\n');

console.log('4Ô∏è‚É£ OrderItem ‚Üí Order:');
console.log('   ‚Ä¢ En la tabla OrderItem, configura orderId como Foreign Key');
console.log('   ‚Ä¢ Referencia: Order.id');
console.log('   ‚Ä¢ Acci√≥n: CASCADE\n');

console.log('4Ô∏è‚É£ OrderItem ‚Üí Product:');
console.log('   ‚Ä¢ En la tabla OrderItem, configura productId como Foreign Key');
console.log('   ‚Ä¢ Referencia: Product.id');
console.log('   ‚Ä¢ Acci√≥n: SET NULL\n');

console.log('üéØ VENTAJAS DE ESTE ENFOQUE:');
console.log('   ‚Ä¢ ‚úÖ Sin problemas de conectividad');
console.log('   ‚Ä¢ ‚úÖ Interfaz visual intuitiva');
console.log('   ‚Ä¢ ‚úÖ Gesti√≥n de datos en tiempo real');
console.log('   ‚Ä¢ ‚úÖ Herramientas integradas');
console.log('   ‚Ä¢ ‚úÖ Monitoreo y logs autom√°ticos');
console.log('   ‚Ä¢ ‚úÖ Backup autom√°tico');
console.log('   ‚Ä¢ ‚úÖ Escalabilidad autom√°tica\n');

console.log('üöÄ ¬°Listo para usar Supabase directamente!');
console.log('   Accede a tu dashboard y comienza a crear las tablas.');
