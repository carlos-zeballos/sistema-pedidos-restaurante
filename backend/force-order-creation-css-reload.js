const fs = require('fs');
const path = require('path');

console.log('üîÑ FORZANDO RECARGA DE ESTILOS CSS DE ORDERCREATION');
console.log('==================================================');

// Funci√≥n para agregar un timestamp a los estilos CSS de OrderCreation
function addTimestampToOrderCreationCSS() {
  const cssPath = path.join(__dirname, '../frontend/src/components/OrderCreation.css');
  
  try {
    // Leer el archivo CSS actual
    let cssContent = fs.readFileSync(cssPath, 'utf8');
    
    // Agregar un comentario con timestamp al final
    const timestamp = new Date().toISOString();
    const timestampComment = `\n\n/* CSS de OrderCreation actualizado: ${timestamp} */\n`;
    
    // Verificar si ya existe un timestamp y reemplazarlo
    if (cssContent.includes('/* CSS de OrderCreation actualizado:')) {
      cssContent = cssContent.replace(/\/\* CSS de OrderCreation actualizado:.*?\*\//s, `/* CSS de OrderCreation actualizado: ${timestamp} */`);
    } else {
      cssContent += timestampComment;
    }
    
    // Escribir el archivo actualizado
    fs.writeFileSync(cssPath, cssContent);
    
    console.log('‚úÖ CSS de OrderCreation actualizado con timestamp:', timestamp);
    console.log('üìÅ Archivo:', cssPath);
    
    // Verificar que los estilos cr√≠ticos est√©n presentes
    const criticalStyles = [
      'visibility: visible !important',
      'display: block !important',
      'min-height: 200px !important',
      'z-index: 10 !important'
    ];
    
    console.log('\nüîç Verificando estilos cr√≠ticos de OrderCreation:');
    criticalStyles.forEach(style => {
      if (cssContent.includes(style)) {
        console.log(`‚úÖ ${style}`);
      } else {
        console.log(`‚ùå ${style}`);
      }
    });
    
    console.log('\nüí° INSTRUCCIONES PARA APLICAR LOS CAMBIOS:');
    console.log('1. Guarda todos los archivos en tu editor');
    console.log('2. Presiona Ctrl+F5 (o Cmd+Shift+R en Mac) para recargar sin cach√©');
    console.log('3. O abre las herramientas de desarrollador (F12)');
    console.log('4. Haz clic derecho en el bot√≥n de recargar y selecciona "Vaciar cach√© y recargar"');
    console.log('5. Ve a la vista de creaci√≥n de √≥rdenes (/new-order)');
    console.log('6. Verifica que todos los elementos sean visibles');
    
    console.log('\nüéØ ELEMENTOS QUE DEBER√çAS VER:');
    console.log('- ‚úÖ Box de debug con contadores');
    console.log('- ‚úÖ Secci√≥n de selecci√≥n de espacios (mesas)');
    console.log('- ‚úÖ Campos de informaci√≥n del cliente');
    console.log('- ‚úÖ Filtros de categor√≠as');
    console.log('- ‚úÖ Grid de productos con botones "Agregar"');
    console.log('- ‚úÖ Secci√≥n del carrito de compras');
    console.log('- ‚úÖ Botones de acci√≥n (Cancelar, Crear Orden)');
    
    console.log('\nüìä ESTILOS APLICADOS:');
    console.log('- visibility: visible !important (forzar visibilidad)');
    console.log('- display: block !important (forzar display)');
    console.log('- min-height: 200px !important (altura m√≠nima)');
    console.log('- z-index: 10 !important (superposici√≥n)');
    console.log('- overflow: visible !important (mostrar contenido)');
    
  } catch (error) {
    console.error('‚ùå Error actualizando CSS de OrderCreation:', error.message);
  }
}

// Ejecutar la funci√≥n
addTimestampToOrderCreationCSS();

console.log('\nüöÄ PROCESO COMPLETADO');
console.log('=====================');
console.log('Los estilos CSS de OrderCreation han sido actualizados y forzados a recargarse.');
console.log('Si a√∫n no ves los elementos, sigue las instrucciones de recarga arriba.');









