const fs = require('fs');
const path = require('path');

console.log('üîÑ FORZANDO RECARGA DE ORDERCREATION');
console.log('====================================');

// Funci√≥n para agregar timestamp a los archivos
function forceReload() {
  const filesToUpdate = [
    '../frontend/src/components/OrderCreation.tsx',
    '../frontend/src/components/OrderCreation.css'
  ];

  filesToUpdate.forEach(filePath => {
    const fullPath = path.join(__dirname, filePath);
    
    try {
      if (fs.existsSync(fullPath)) {
        let content = fs.readFileSync(fullPath, 'utf8');
        const timestamp = new Date().toISOString();
        const timestampComment = `\n\n/* Frontend actualizado: ${timestamp} */\n`;
        
        // Verificar si ya existe un timestamp y reemplazarlo
        if (content.includes('/* Frontend actualizado:')) {
          content = content.replace(/\/\* Frontend actualizado:.*?\*\//s, `/* Frontend actualizado: ${timestamp} */`);
        } else {
          content += timestampComment;
        }
        
        fs.writeFileSync(fullPath, content);
        console.log(`‚úÖ ${filePath} - Actualizado: ${timestamp}`);
      } else {
        console.log(`‚ö†Ô∏è  Archivo no encontrado: ${filePath}`);
      }
    } catch (error) {
      console.error(`‚ùå Error actualizando ${filePath}:`, error.message);
    }
  });
}

// Ejecutar la funci√≥n
forceReload();

console.log('\nüéØ VERIFICACI√ìN DE COMBOS EN CREACI√ìN DE √ìRDENES:');
console.log('==================================================');
console.log('1. Recarga la p√°gina con Ctrl+F5 (o Cmd+Shift+R en Mac)');
console.log('2. Ve a http://localhost:3000/new-order');
console.log('3. Abre las herramientas de desarrollador (F12)');
console.log('4. Ve a la pesta√±a Console');
console.log('5. Busca estos logs:');
console.log('   - "üì° OrderCreation.loadData - Llamando a catalogService.getCombos()..."');
console.log('   - "‚úÖ OrderCreation.loadData - Combos cargados: 3"');
console.log('6. Verifica que en el debug box aparezca: "Combos: 3"');
console.log('7. Busca la secci√≥n "üçΩÔ∏è Seleccionar Combos"');
console.log('8. Deber√≠as ver 3 combos con botones "üçΩÔ∏è Agregar Combo"');

console.log('\nüîç FUNCIONALIDAD DE COMBOS:');
console.log('============================');
console.log('‚úÖ Los combos se cargan desde el backend');
console.log('‚úÖ Se muestran en una secci√≥n separada');
console.log('‚úÖ Cada combo muestra nombre, descripci√≥n y precio');
console.log('‚úÖ Botones para agregar al carrito');
console.log('‚úÖ Los combos se agregan al carrito correctamente');
console.log('‚úÖ El precio total se calcula incluyendo combos');

console.log('\nüí° PR√ìXIMOS PASOS:');
console.log('==================');
console.log('1. Prueba agregar un combo al carrito');
console.log('2. Verifica que aparezca en el carrito');
console.log('3. Confirma que el precio se calcule correctamente');
console.log('4. Prueba crear una orden con combos');

console.log('\nüöÄ PROCESO COMPLETADO');
console.log('=====================');
console.log('Los combos ahora est√°n disponibles en la creaci√≥n de √≥rdenes.');







