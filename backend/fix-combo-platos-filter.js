const fs = require('fs');
const path = require('path');

console.log('üçΩÔ∏è CORRIGIENDO FILTRO DE PLATOS EN COMBOS');
console.log('==========================================');

// Funci√≥n para agregar timestamp a los archivos
function fixComboPlatosFilter() {
  const filesToUpdate = [
    '../frontend/src/components/OrderCreation.tsx',
    '../frontend/src/components/OrderCreation.css'
  ];

  filesToUpdate.forEach(filePath => {
    const fullPath = path.join(__dirname, filePath);
    
    try {
      if (fs.existsSync(fullPath)) {
        let content = fs.readFileSync(fullPath, 'utf8');
        const timestamp = new Date().toISOString();
        const timestampComment = `\n\n/* Filtro de platos corregido: ${timestamp} */\n`;
        
        // Verificar si ya existe un timestamp y reemplazarlo
        if (content.includes('/* Filtro de platos corregido:')) {
          content = content.replace(/\/\* Filtro de platos corregido:.*?\*\//s, `/* Filtro de platos corregido: ${timestamp} */`);
        } else {
          content += timestampComment;
        }
        
        fs.writeFileSync(fullPath, content);
        console.log(`‚úÖ ${filePath} - Filtro de platos corregido: ${timestamp}`);
      } else {
        console.log(`‚ö†Ô∏è  Archivo no encontrado: ${filePath}`);
      }
    } catch (error) {
      console.error(`‚ùå Error corrigiendo filtro ${filePath}:`, error.message);
    }
  });
}

// Ejecutar la funci√≥n
fixComboPlatosFilter();

console.log('\nüéØ FILTRO CORREGIDO:');
console.log('=====================');
console.log('‚úÖ ANTES: Solo productos tipo "COMIDA"');
console.log('‚úÖ AHORA: Productos tipo "COMIDA" + "BEBIDA"');
console.log('‚ùå EXCLUIDOS: Adicionales, Acompa√±amientos, Combos, Salsas');

console.log('\nüçΩÔ∏è PRODUCTOS INCLUIDOS EN PLATOS PRINCIPALES:');
console.log('===============================================');
console.log('‚úÖ COMIDA: Platos principales, sushi, rolls, etc.');
console.log('‚úÖ BEBIDA: Bebidas, jugos, refrescos, etc.');
console.log('‚ùå ADICIONAL: Salsas, aderezos, extras');
console.log('‚ùå ACOMPA√ëAMIENTOS: Productos de categor√≠a acompa√±amientos');
console.log('‚ùå COMBOS: Otros combos');
console.log('‚ùå SALSA: Productos que contengan "salsa" en el nombre');

console.log('\nüí° L√ìGICA DEL FILTRO:');
console.log('======================');
console.log('1. Se muestran productos tipo "COMIDA"');
console.log('2. Se muestran productos tipo "BEBIDA"');
console.log('3. Se excluyen productos tipo "ADICIONAL"');
console.log('4. Se excluyen productos de categor√≠a "Acompa√±amientos"');
console.log('5. Se excluyen productos tipo "COMBO"');
console.log('6. Se excluyen productos que contengan "salsa" en el nombre');

console.log('\nüîç C√ìMO PROBAR:');
console.log('================');
console.log('1. Recarga la p√°gina con Ctrl+F5 (o Cmd+Shift+R en Mac)');
console.log('2. Ve a http://localhost:3000/new-order');
console.log('3. Haz clic en la pesta√±a "COMBOS"');
console.log('4. Haz clic en "üçΩÔ∏è Personalizar Combo"');
console.log('5. En "Platos Principales" verifica que aparezcan:');
console.log('   ‚úÖ Platos de comida (sushi, rolls, etc.)');
console.log('   ‚úÖ Bebidas (refrescos, jugos, etc.)');
console.log('   ‚ùå NO aparezcan salsas o aderezos');
console.log('   ‚ùå NO aparezcan productos de acompa√±amientos');
console.log('   ‚ùå NO aparezcan otros combos');

console.log('\nüé® RESULTADO ESPERADO:');
console.log('=======================');
console.log('üçΩÔ∏è PLATOS PRINCIPALES: Solo comida y bebidas principales');
console.log('ü•§ ACOMPA√ëAMIENTOS: Solo productos de categor√≠a acompa√±amientos');
console.log('ü•¢ PALILLOS: Sistema de palillos normales y especiales');
console.log('üìù NOTAS: Campo para instrucciones especiales');

console.log('\nüöÄ PROCESO COMPLETADO');
console.log('=====================');
console.log('El filtro de platos principales en combos ha sido corregido.');
console.log('Ahora muestra solo comida y bebidas, excluyendo adicionales y acompa√±amientos.');









